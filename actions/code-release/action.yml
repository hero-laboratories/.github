name: "Perform a code test"
description: "Installing dependencies and running tests"

inputs:
   token:
     description: "Token needed to access files "
     required: true
   access-key:
     description: "AWS access key"
     required: true
   secret-key:
     description: "AWS secret key"
     required: true
   path-to-version-file-json:
     description: "path to json with version number"
     required: true
   lambda-deploy:
     type: boolean
     description: Flag to deploy lambda
     default: true
   lambda-name:
     description: "lambda name"
     required: true
   s3-bucket:
     description: "s3 bucket name"
     required: true
   version-file:
     description: "Name of the created txt file"
     required: true
   working-folder-name:
     description: "Name of the folder in which the zip and txt files were created"
     required: true
   AWS-account-number:
     description: "ARN number for lambda"
     required: true
   s3-layer-folder:
     description: "S3 layers folder used in deploying layers"
     required: false

runs:
   using: "composite"
   steps:
      - name: Read verion number from json file
        id: version
        uses: notiz-dev/github-action-json-property@release
        with: 
           path: '${{inputs.path-to-version-file-json}}'
           prop_path: 'version'
      - name: Create a zip package
        shell: bash
        run: |
           chmod +x "./package.sh"
           "./package.sh"
        env: 
           VERSION: ${{steps.version.outputs.prop}}
           GITHUB_TOKEN: ${{ inputs.token }}
      - name: Upload code under Release tag
        if: github.ref == 'refs/heads/master'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{steps.version.outputs.prop}}
          body: ${{ github.event.head_commit.message }}
          artifacts: ${{inputs.working-folder-name}}/${{inputs.lambda-name}}-lambda-${{steps.version.outputs.prop}}.zip
          token: ${{ inputs.token }}
      - name: Send zip file to S3
        uses: jakejarvis/s3-sync-action@master
        with: 
          args:  --delete --exclude '*' --include ${{inputs.lambda-name}}-lambda-${{steps.version.outputs.prop}}.zip --include ${{inputs.version-file}}
        env:
          AWS_S3_BUCKET: ${{inputs.s3-bucket}}
          AWS_ACCESS_KEY_ID: ${{inputs.access-key}}
          AWS_SECRET_ACCESS_KEY: ${{inputs.secret-key}}
          SOURCE_DIR: './${{inputs.working-folder-name}}'
          DEST_DIR: '${{inputs.s3-layer-folder}}'
      - name: Configure AWS Credentials  
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{inputs.access-key}}
            aws-secret-access-key: ${{inputs.secret-key}}
            aws-region: eu-west-2
      - name: Lambda code deploy on AWS
        if: ${{ inputs.lambda-deploy == 'true' }}
        shell: bash
        run: |
            aws lambda update-function-code --function-name=${{inputs.lambda-name}} --s3-bucket ${{inputs.s3-bucket}} --s3-key ${{inputs.lambda-name}}-lambda-${{steps.version.outputs.prop}}.zip
            aws lambda tag-resource --resource arn:aws:lambda:eu-west-2:${{inputs.AWS-account-number}}:function:${{inputs.lambda-name}} --tags Version=${{steps.version.outputs.prop}},Name=${{inputs.lambda-name}},Deployment=Updated_by_GitHub
